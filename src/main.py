import os
from openai import OpenAI
from dotenv import load_dotenv
from src.rag_system import RAGSystem

load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
if not OPENAI_API_KEY:
    raise ValueError("OpenAI API key not found. Please set OPENAI_API_KEY in your .env file.")

client = OpenAI(api_key=OPENAI_API_KEY)


SYSTEM_PROMPT = """
–¢—ã ‚Äî –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ "–ê–≤—Ç–æ–ú–∞—Å—Ç–µ—Ä–ü—Ä–æ—Ñ–∏", —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–µ–º—Å—è –Ω–∞ –∑–∞–ø—á–∞—Å—Ç—è—Ö –¥–ª—è –Ω–µ–º–µ—Ü–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, Volkswagen, BMW, Mercedes, Audi). –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏, –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –∏ –¥–æ–≤–æ–¥–∏—Ç—å –¥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.

–¢–≤–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- **–£–≤–µ—Ä–µ–Ω–Ω—ã–π –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π:** –¢—ã –∑–Ω–∞–µ—à—å –≤—Å—ë –æ –∑–∞–ø—á–∞—Å—Ç—è—Ö –∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ç–µ–±–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π. –ì–æ–≤–æ—Ä–∏ —á–µ—Ç–∫–æ, –ø–æ –¥–µ–ª—É, –Ω–æ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ.
- **–ü—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π:** –ù–µ –∂–¥–∏, –ø–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç –∑–∞–¥–∞—Å—Ç –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–µ–¥–ª–∞–≥–∞–π –≤–∞—Ä–∏–∞–Ω—Ç—ã (–æ—Ä–∏–≥–∏–Ω–∞–ª/–∞–Ω–∞–ª–æ–≥), —É—Ç–æ—á–Ω—è–π –¥–µ—Ç–∞–ª–∏ (–º–æ–¥–µ–ª—å, –≥–æ–¥, VIN, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞, –Ω–æ –Ω–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–π –∑–∞–ø—Ä–æ—Å–æ–º VIN –±–µ–∑ —è–≤–Ω–æ–π –Ω—É–∂–¥—ã), –ø—Ä–µ–¥–ª–∞–≥–∞–π —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–∫—É–ø–∞—é—Ç —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏, –ø—Ä–µ–¥–ª–æ–∂–∏ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –¥–∏—Å–∫–∏ –∏–ª–∏ –¥–∞—Ç—á–∏–∫ –∏–∑–Ω–æ—Å–∞, –µ—Å–ª–∏ —ç—Ç–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ).
- **–ö–ª–∏–µ–Ω—Ç–æ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π:** –¢–≤–æ—è —Ü–µ–ª—å ‚Äî –¥–æ–≤–æ–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–≤–µ—Ä—à–∏–ª –ø–æ–∫—É–ø–∫—É. –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª—É—à–∞–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏, —Ä–∞–±–æ—Ç–∞–π —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏ –º—è–≥–∫–æ, –Ω–æ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ.
- **–ü—Ä–æ–¥–∞—é—â–∏–π:** –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–π –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤, —Å–æ–∑–¥–∞–≤–∞–π —Ü–µ–Ω–Ω–æ—Å—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–æ–¥–∞–∂ –∏–∑ "–∫–Ω–∏–≥–∏ –ø—Ä–æ–¥–∞–∂". –°—Ç—Ä–µ–º–∏—Å—å –∑–∞–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É.

–¢–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
- –¢—ã –∏–º–µ–µ—à—å –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π (—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–Ω–∏–≥–∏ –ø—Ä–æ–¥–∞–∂), –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ç–µ–±–µ –≤–º–µ—Å—Ç–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫–ª–∏–µ–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π –≠–¢–£ –ò–ù–§–û–†–ú–ê–¶–ò–Æ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤.
- –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–∞–∑–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
- –¢—ã –º–æ–∂–µ—à—å –≤—ã–∑—ã–≤–∞—Ç—å –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏:
    1. `send_invoice(details)`: –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—á–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É, –∫–æ–≥–¥–∞ –æ–Ω –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∫–µ. `details` –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö (–∞—Ä—Ç–∏–∫—É–ª, –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ü–µ–Ω–∞) –∏, –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å, –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞.
    2. `handover_to_manager(lead_data)`: –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∏–∞–ª–æ–≥–∞ –∂–∏–≤–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É. `lead_data` –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é —Å—É—Ç—å –∑–∞–ø—Ä–æ—Å–∞, –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –∏–ª–∏ –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã, –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å.
- –ù–∞—á–∏–Ω–∞–π –¥–∏–∞–ª–æ–≥ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–µ—Å—Å–∏–∏.
- –ü–æ—Å–ª–µ –ø–æ–¥–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º, —Å–ø—Ä–æ—Å–∏, –≥–æ—Ç–æ–≤ –ª–∏ –æ–Ω –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.
- –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–æ–≥–ª–∞—Å–µ–Ω, —É—Ç–æ—á–Ω–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è —Å—á–µ—Ç–∞ –∏ –≤—ã–∑–æ–≤–∏ `send_invoice`.
- –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–æ–º–Ω–µ–≤–∞–µ—Ç—Å—è, —É –Ω–µ–≥–æ —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –æ–Ω –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º, –≤—ã–∑–æ–≤–∏ `handover_to_manager`.
- –°—Ç–∞—Ä–∞–π—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—á–µ–≤–∏–¥–Ω–æ –∏–∑ –µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–¥–±–æ—Ä–∞.
- –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π —Ü–µ–Ω—É –∏ –Ω–∞–ª–∏—á–∏–µ (–µ—Å–ª–∏ —ç—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –µ—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ). –ü—Ä–µ–¥–ª–∞–≥–∞–π –æ—Ä–∏–≥–∏–Ω–∞–ª –∏ –∞–Ω–∞–ª–æ–≥, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –æ–±–∞, —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–∞–∑–Ω–∏—Ü—ã –≤ —Ü–µ–Ω–µ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤.
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–∏—à–∫–æ–º —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π –∏–ª–∏ —Ä–æ–±–æ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫. –ë—É–¥—å –∫–∞–∫ –æ–ø—ã—Ç–Ω—ã–π, –Ω–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü.
- –ú–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã –Ω–µ–º–Ω–æ–≥–æ –ø–æ-—Ä–∞–∑–Ω–æ–º—É, –Ω–∞–ø—Ä–∏–º–µ—Ä "Golf 6", "–ì–æ–ª—å—Ñ 6", "–ì–æ–ª—å—Ñ VI". –£—á–∏—Ç—ã–≤–∞–π —ç—Ç–æ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ "–ü–∞—Å—Å–∞—Ç –ë6", "Passat B6".
"""

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è GPT
AVAILABLE_FUNCTIONS = [
    {
        "type": "function",
        "function": {
            "name": "send_invoice",
            "description": "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—á–µ—Ç –∫–ª–∏–µ–Ω—Ç—É, –∫–æ–≥–¥–∞ –æ–Ω –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∫–µ –∏ –≤—Å–µ –¥–µ—Ç–∞–ª–∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω—ã.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_name": {"type": "string", "description": "–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ."},
                    "customer_contact": {"type": "string", "description": "–ö–æ–Ω—Ç–∞–∫—Ç –∫–ª–∏–µ–Ω—Ç–∞ (email/—Ç–µ–ª–µ—Ñ–æ–Ω), –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–µ–Ω."},
                    "items": {
                        "type": "array",
                        "description": "–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Å—á–µ—Ç–∞.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "article": {"type": "string", "description": "–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞."},
                                "name": {"type": "string", "description": "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞."},
                                "quantity": {"type": "integer", "description": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ."},
                                "price_per_unit": {"type": "number", "description": "–¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É."}
                            },
                            "required": ["article", "name", "quantity", "price_per_unit"]
                        }
                    },
                    "total_amount": {"type": "number", "description": "–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞."}
                },
                "required": ["items", "total_amount"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "handover_to_manager",
            "description": "–ü–µ—Ä–µ–¥–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–¥–µ –∂–∏–≤–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É.",
            "parameters": {
                "type": "object",
                "properties": {
                    "reason": {"type": "string", "description": "–ü—Ä–∏—á–∏–Ω–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É."},
                    "customer_query": {"type": "string", "description": "–ò—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞ –∏–ª–∏ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã."},
                    "conversation_summary": {"type": "string", "description": "–ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞."},
                    "customer_name": {"type": "string", "description": "–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ."},
                    "customer_contact": {"type": "string", "description": "–ö–æ–Ω—Ç–∞–∫—Ç –∫–ª–∏–µ–Ω—Ç–∞ (email/—Ç–µ–ª–µ—Ñ–æ–Ω), –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–µ–Ω."}
                },
                "required": ["reason", "customer_query"]
            }
        }
    }
]


class SalesBot:
    def __init__(self):
        self.rag_system = RAGSystem()
        self.conversation_history = []

    def _get_rag_context(self, user_query):
        search_results = self.rag_system.search(user_query, k=5)
        context_str = "–ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:\n"
        if not search_results:
            context_str += "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É.\n"
        for res in search_results:
            context_str += f"- {res['text']}\n"
        return context_str

    def _call_openai_api(self, messages_for_api):
        try:
            response = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=messages_for_api,
                tools=AVAILABLE_FUNCTIONS,
                tool_choice="auto"
            )
            return response.choices[0].message
        except Exception as e:
            print(f"Error calling OpenAI API: {e}")
            return None

    def process_message(self, user_query):
        print(f"\nüë§ –ö–ª–∏–µ–Ω—Ç: {user_query}")
        self.conversation_history.append({"role": "user", "content": user_query})
        messages_for_api = [{"role": "system", "content": SYSTEM_PROMPT}]
        messages_for_api.extend(self.conversation_history[:-1])
        rag_context = self._get_rag_context(user_query)
        enriched_user_query = f"{rag_context}\n\n–ó–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞: {user_query}"
        messages_for_api.append({"role": "user", "content": enriched_user_query})


        ai_response_message = self._call_openai_api(messages_for_api)

        if not ai_response_message:
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞."

        if ai_response_message.tool_calls:
            self.conversation_history.append(ai_response_message)
            
            for tool_call in ai_response_message.tool_calls:
                function_name = tool_call.function.name
                function_args = tool_call.function.arguments
                
                print(f"ü§ñ –ò–ò —Ö–æ—á–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: {function_name} —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏: {function_args}")
                if function_name == "send_invoice":
                    # send_invoice(json.loads(function_args)) # –†–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤
                    print(f"--> –ú–û–ö: –í—ã–∑–æ–≤ send_invoice({function_args})")
                    function_response_content = f"–°—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (–¥–µ—Ç–∞–ª–∏: {function_args}). –ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ?"
                elif function_name == "handover_to_manager":
                    # handover_to_manager(json.loads(function_args)) # –†–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤
                    print(f"--> –ú–û–ö: –í—ã–∑–æ–≤ handover_to_manager({function_args})")
                    function_response_content = f"–ü–µ—Ä–µ–¥–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É (–¥–µ—Ç–∞–ª–∏: {function_args}). –û–Ω —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è."
                else:
                    function_response_content = f"–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è {function_name}"

                self.conversation_history.append({
                    "tool_call_id": tool_call.id,
                    "role": "tool",
                    "name": function_name,
                    "content": function_response_content,
                })
            
            final_ai_response_message = self._call_openai_api(self.conversation_history)
            if final_ai_response_message and final_ai_response_message.content:
                ai_response_text = final_ai_response_message.content
                self.conversation_history.append(final_ai_response_message)
            else:
                ai_response_text = "–§—É–Ω–∫—Ü–∏—è –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
        
        elif ai_response_message.content:
            ai_response_text = ai_response_message.content
            self.conversation_history.append(ai_response_message)
        else:
            ai_response_text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç."
            self.conversation_history.append({"role": "assistant", "content": ai_response_text})


        print(f"ü§ñ –ò–ò-–ø—Ä–æ–¥–∞–≤–µ—Ü: {ai_response_text}")
        return ai_response_text

if __name__ == "__main__":
    bot = SalesBot()
    bot.process_message("–ü—Ä–∏–≤–µ—Ç") # –î–ª—è —Ç–µ—Å—Ç–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    bot.process_message("–£ –≤–∞—Å –µ—Å—Ç—å –º–æ—Ç–æ—Ä—á–∏–∫ –æ–º—ã–≤–∞—Ç–µ–ª—è –¥–ª—è Golf 6?")
    bot.process_message("–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω–∞—Ä—å –Ω–∞ –ü–∞—Å—Å–∞—Ç –ë6?")
    bot.process_message("–≠—Ç–æ –æ—Ä–∏–≥–∏–Ω–∞–ª –∏–ª–∏ –∞–Ω–∞–ª–æ–≥?") # –≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —Ç–µ—Å—Ç–∞
    print("AI Sales Bot –∑–∞–ø—É—â–µ–Ω. –í–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")
    while True:
        user_input = input("–í—ã: ")
        if user_input.lower() == '–≤—ã—Ö–æ–¥':
            break
        bot.process_message(user_input)